name: Deploy PsyWeb

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  SERVER_PORT: ${{ secrets.SERVER_PORT }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}

jobs:
  configure-ssh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -T 10 -p "${SERVER_PORT}" -H "${SERVER_HOST}" >> ~/.ssh/known_hosts

  upload-sources:
    runs-on: ubuntu-latest
    needs: configure-ssh
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -T 10 -p "${SERVER_PORT}" -H "${SERVER_HOST}" >> ~/.ssh/known_hosts

      - name: Upload sources (tar + scp)
        shell: bash
        run: |
          set -euo pipefail
          echo "📦 Creating archive..."
          tar -czf psyweb-deploy.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='frontend/node_modules' \
            --exclude='frontend/build' \
            --exclude='frontend/.next' \
            --exclude='backend/staticfiles' \
            --exclude='backend/media' \
            --exclude='*.log' \
            --exclude='*.tmp' \
            --exclude='*.pyc' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.coverage' \
            --exclude='*.egg-info' \
            --exclude='.env*' \
            .
          
          echo "📤 Uploading archive..."
          scp -P "${SERVER_PORT}" psyweb-deploy.tar.gz "${SERVER_USER}@${SERVER_HOST}:/tmp/"
          
          echo "📂 Extracting on server..."
          ssh -p "${SERVER_PORT}" "${SERVER_USER}@${SERVER_HOST}" "
            cd /home/psyweb || mkdir -p /home/psyweb && cd /home/psyweb;
            tar -xzf /tmp/psyweb-deploy.tar.gz;
            rm -f /tmp/psyweb-deploy.tar.gz;
            echo '✅ Files extracted successfully!'
          "
          
          echo "✅ Upload completed!"

  build-images:
    runs-on: ubuntu-latest
    needs: upload-sources
    steps:
      - name: Configure SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -T 10 -p "${SERVER_PORT}" -H "${SERVER_HOST}" >> ~/.ssh/known_hosts

      - name: Build images on server
        shell: bash
        run: |
          set -euo pipefail
          ssh -p "${SERVER_PORT}" "${SERVER_USER}@${SERVER_HOST}" "
            cd /home/psyweb;
            docker compose -f docker-compose.yml build
          "

  up-containers:
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - name: Configure SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -T 10 -p "${SERVER_PORT}" -H "${SERVER_HOST}" >> ~/.ssh/known_hosts

      - name: Up containers on server
        shell: bash
        run: |
          set -euo pipefail
          ssh -p "${SERVER_PORT}" "${SERVER_USER}@${SERVER_HOST}" "
            cd /home/psyweb;
            docker compose -f docker-compose.yml down || true;
            docker compose -f docker-compose.yml up -d
          "

  restart_nginx:
    runs-on: ubuntu-latest
    needs: up-containers
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Restart Nginx on server
        run: |
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "sudo service nginx restart || docker restart psyweb-nginx-prod || true"
        env:
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}

  deployment-success:
    runs-on: ubuntu-latest
    needs: restart_nginx
    steps:
      - name: Deployment completed
        run: |
          echo "✅ Docker deployment completed successfully!"
          echo "🌐 Application is live at: http://${{ secrets.SERVER_HOST }}"
          echo "🔗 Frontend: http://${{ secrets.SERVER_HOST }}:3000"
          echo "🔗 Backend API: http://${{ secrets.SERVER_HOST }}:8000"
          echo "🔗 Admin: http://${{ secrets.SERVER_HOST }}:8000/admin"

name: Deploy PsyWeb

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

env:
  SERVER_PORT: ${{ secrets.SERVER_PORT }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Configure SSH
        shell: bash
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p "${SERVER_PORT}" "${SERVER_HOST}" >> ~/.ssh/known_hosts

      - name: Upload and Deploy
        shell: bash
        run: |
          echo "📦 Creating archive..."
          tar -czf psyweb-deploy.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='frontend/node_modules' \
            --exclude='frontend/build' \
            --exclude='frontend/.next' \
            --exclude='backend/staticfiles' \
            --exclude='backend/media' \
            --exclude='*.log' \
            --exclude='*.tmp' \
            --exclude='*.pyc' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.coverage' \
            --exclude='*.egg-info' \
            --exclude='.env*' \
            --exclude='psyweb-deploy.tar.gz' \
            --warning=no-file-changed \
            --ignore-failed-read \
            .
          
          echo "📤 Uploading to server..."
          scp -o StrictHostKeyChecking=no -P "${SERVER_PORT}" psyweb-deploy.tar.gz "${SERVER_USER}@${SERVER_HOST}:/tmp/"
          
          echo "🚀 Deploying on server..."
          ssh -o StrictHostKeyChecking=no -p "${SERVER_PORT}" "${SERVER_USER}@${SERVER_HOST}" "
            cd /home/psyweb || mkdir -p /home/psyweb && cd /home/psyweb
            echo '📂 Extracting files...'
            tar -xzf /tmp/psyweb-deploy.tar.gz
            rm -f /tmp/psyweb-deploy.tar.gz
            echo '📋 Files extracted:'
            ls -la
            echo '🛑 Stopping old containers...'
            docker compose -f docker-compose.yml down || true
            echo '🧹 Cleaning up old images...'
            docker system prune -f || true
            echo '🔨 Building backend image...'
            docker compose -f docker-compose.yml build backend --no-cache
            echo '🔨 Building frontend image...'
            docker compose -f docker-compose.yml build frontend --no-cache
            echo '🚀 Starting all containers...'
            docker compose -f docker-compose.yml up -d
            echo '📊 Container status:'
            docker compose -f docker-compose.yml ps
            echo '✅ Deployment completed!'
          "

      - name: Restart Nginx
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no -p "${SERVER_PORT}" "${SERVER_USER}@${SERVER_HOST}" "sudo service nginx restart || true"

      - name: Deployment Success
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🌐 Application is live at: http://${{ secrets.SERVER_HOST }}"
          echo "🔗 Frontend: http://${{ secrets.SERVER_HOST }}:3000"
          echo "🔗 Backend API: http://${{ secrets.SERVER_HOST }}:8000"
          echo "🔗 Admin: http://${{ secrets.SERVER_HOST }}:8000/admin"